{
  "array variable": {
    "prefix": "va",
    "body": [
      "var ${1:items} = new ${2:T}[${3:0}];${0}"
    ],
    "description": "array variable declaration"
  },
  "array variable (with initializer)": {
    "prefix": "va_",
    "body": [
      "var ${1:items} = new ${2:T}[] { ${3:null} };${0}"
    ],
    "description": "array variable declaration (with initializer)"
  },
  "public auto property": {
    "prefix": "p",
    "body": [
      "public ${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "public auto-implemented property declaration"
  },
  "internal auto property": {
    "prefix": "ip",
    "body": [
      "internal ${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "internal auto-implemented property declaration"
  },
  "private auto property": {
    "prefix": "pp",
    "body": [
      "private ${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "private auto-implemented property declaration"
  },
  "public virtual auto property": {
    "prefix": "vp",
    "body": [
      "public virtual ${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "public virtual auto-implemented property declaration"
  },
  "internal virtual auto property": {
    "prefix": "ivp",
    "body": [
      "internal virtual ${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "internal virtual auto-implemented property declaration"
  },
  "public auto property with private setter": {
    "prefix": "pps",
    "body": [
      "public ${1:T} ${2:PropertyName} { get; private set; }${0}"
    ],
    "description": "public auto-implemented property declaration with private setter"
  },
  "internal auto property with private setter": {
    "prefix": "ipps",
    "body": [
      "internal ${1:T} ${2:PropertyName} { get; private set; }${0}"
    ],
    "description": "internal auto-implemented property declaration with private setter"
  },
  "private auto property with private setter": {
    "prefix": "ppps",
    "body": [
      "private ${1:T} ${2:PropertyName} { get; private set; }${0}"
    ],
    "description": "private auto-implemented property declaration with private setter"
  },
  "public class": {
    "prefix": "c",
    "body": [
      "public class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public class declaration"
  },
  "internal class": {
    "prefix": "ic",
    "body": [
      "internal class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal class declaration"
  },
  "private class": {
    "prefix": "pc",
    "body": [
      "private class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private class declaration"
  },
  "public static class": {
    "prefix": "sc",
    "body": [
      "public static class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public static class declaration"
  },
  "internal static class": {
    "prefix": "isc",
    "body": [
      "internal static class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal static class declaration"
  },
  "private static class": {
    "prefix": "psc",
    "body": [
      "private static class ${1:ClassName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private static class declaration"
  },
  "public const": {
    "prefix": "k",
    "body": [
      "public const ${1:T} ${2:ConstantName} = ${3:default(T)};${0}"
    ],
    "description": "public const declaration"
  },
  "internal const": {
    "prefix": "ik",
    "body": [
      "internal const ${1:T} ${2:ConstantName} = ${3:default(T)};${0}"
    ],
    "description": "internal const declaration"
  },
  "private const": {
    "prefix": "pk",
    "body": [
      "private const ${1:T} ${2:ConstantName} = ${3:default(T)};${0}"
    ],
    "description": "private const declaration"
  },
  "public constructor": {
    "prefix": "cr",
    "body": [
      "public ${1:ThisName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public constructor declaration"
  },
  "internal constructor": {
    "prefix": "icr",
    "body": [
      "internal ${1:ThisName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal constructor declaration"
  },
  "private constructor": {
    "prefix": "pcr",
    "body": [
      "private ${1:ThisName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private constructor declaration"
  },
  "public constructor (with parameters)": {
    "prefix": "cr_",
    "body": [
      "public ${1:ThisName}(${2:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public constructor declaration (with parameters)"
  },
  "internal constructor (with parameters)": {
    "prefix": "icr_",
    "body": [
      "internal ${1:ThisName}(${2:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal constructor declaration (with parameters)"
  },
  "private constructor (with parameters)": {
    "prefix": "pcr_",
    "body": [
      "private ${1:ThisName}(${2:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private constructor declaration (with parameters)"
  },
  "public delegate": {
    "prefix": "de",
    "body": [
      "public delegate ${1:void} ${2:DelegateName}();${0}"
    ],
    "description": "public delegate declaration"
  },
  "internal delegate": {
    "prefix": "ide",
    "body": [
      "internal delegate ${1:void} ${2:DelegateName}();${0}"
    ],
    "description": "internal delegate declaration"
  },
  "private delegate": {
    "prefix": "pde",
    "body": [
      "private delegate ${1:void} ${2:DelegateName}();${0}"
    ],
    "description": "private delegate declaration"
  },
  "public delegate (with parameters)": {
    "prefix": "de_",
    "body": [
      "public delegate ${1:void} ${2:DelegateName}(${3:object parameter});${0}"
    ],
    "description": "public delegate declaration (with parameters)"
  },
  "internal delegate (with parameters)": {
    "prefix": "ide_",
    "body": [
      "internal delegate ${1:void} ${2:DelegateName}(${3:object parameter});${0}"
    ],
    "description": "internal delegate declaration (with parameters)"
  },
  "private delegate (with parameters)": {
    "prefix": "pde_",
    "body": [
      "private delegate ${1:void} ${2:DelegateName}(${3:object parameter});${0}"
    ],
    "description": "private delegate declaration (with parameters)"
  },
  "public enum": {
    "prefix": "em",
    "body": [
      "public enum ${1:EnumName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public enum declaration"
  },
  "internal enum": {
    "prefix": "iem",
    "body": [
      "internal enum ${1:EnumName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal enum declaration"
  },
  "private enum": {
    "prefix": "pem",
    "body": [
      "private enum ${1:EnumName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private enum declaration"
  },
  "public event with EventHandler<T>": {
    "prefix": "et",
    "body": [
      "public event EventHandler<${1:EventArgs}> ${2:EventName};",
      "",
      "protected virtual void On${2}(${1} e)",
      "{",
      "    EventHandler<${1}> handler = ${2};",
      "    if (handler != null)",
      "        handler(this, e);",
      "}${0}"
    ],
    "description": "public event declaration with EventHandler<T>"
  },
  "internal event with EventHandler<T>": {
    "prefix": "iet",
    "body": [
      "internal event EventHandler<${1:EventArgs}> ${2:EventName};",
      "",
      "protected virtual void On${2}(${1} e)",
      "{",
      "    EventHandler<${1}> handler = ${2};",
      "    if (handler != null)",
      "        handler(this, e);",
      "}${0}"
    ],
    "description": "internal event declaration with EventHandler<T>"
  },
  "private event with EventHandler<T>": {
    "prefix": "pet",
    "body": [
      "private event EventHandler<${1:EventArgs}> ${2:EventName};",
      "",
      "protected virtual void On${2}(${1} e)",
      "{",
      "    EventHandler<${1}> handler = ${2};",
      "    if (handler != null)",
      "        handler(this, e);",
      "}${0}"
    ],
    "description": "private event declaration with EventHandler<T>"
  },
  "public field": {
    "prefix": "f",
    "body": [
      "public ${1:T} ${2:FieldName};${0}"
    ],
    "description": "public field declaration"
  },
  "private field": {
    "prefix": "pf",
    "body": [
      "private ${1:T} ${2:FieldName};${0}"
    ],
    "description": "private field declaration"
  },
  "public static field": {
    "prefix": "sf",
    "body": [
      "public static ${1:T} ${2:FieldName};${0}"
    ],
    "description": "public static field declaration"
  },
  "private static field": {
    "prefix": "psf",
    "body": [
      "private static ${1:T} ${2:FieldName};${0}"
    ],
    "description": "private static field declaration"
  },
  "IEnumerable<T> type": {
    "prefix": "ge",
    "body": [
      "IEnumerable<${1:T}>${0}"
    ],
    "description": "IEnumerable<T> type declaration"
  },
  "if not TryParse": {
    "prefix": "ifftp",
    "body": [
      "${1:T} ${2:x};",
      "if (!${1}.TryParse(${3:value}, out ${2}))",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "if statement with condition whether TryParse method returns false."
  },
  "if TryParse": {
    "prefix": "iftp",
    "body": [
      "${1:T} ${2:x};",
      "if (${1}.TryParse(${3:value}, out ${2}))",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "if statement with condition whether TryParse method returns true."
  },
  "public indexer": {
    "prefix": "ir",
    "body": [
      "public ${1:T} this[${2:int index}]",
      "{",
      "    get { ${0}}",
      "    set { }",
      "}"
    ],
    "description": "public indexer declaration"
  },
  "internal indexer": {
    "prefix": "iir",
    "body": [
      "internal ${1:T} this[${2:int index}]",
      "{",
      "    get { ${0}}",
      "    set { }",
      "}"
    ],
    "description": "internal indexer declaration"
  },
  "private indexer": {
    "prefix": "pir",
    "body": [
      "private ${1:T} this[${2:int index}]",
      "{",
      "    get { ${0}}",
      "    set { }",
      "}"
    ],
    "description": "private indexer declaration"
  },
  "public interface": {
    "prefix": "ie",
    "body": [
      "public interface ${1:InterfaceName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public interface declaration"
  },
  "internal interface": {
    "prefix": "iie",
    "body": [
      "internal interface ${1:InterfaceName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal interface declaration"
  },
  "public method": {
    "prefix": "m",
    "body": [
      "public ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public method declaration"
  },
  "internal method": {
    "prefix": "im",
    "body": [
      "internal ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal method declaration"
  },
  "private method": {
    "prefix": "pm",
    "body": [
      "private ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private method declaration"
  },
  "public static method": {
    "prefix": "sm",
    "body": [
      "public static ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public static method declaration"
  },
  "internal static method": {
    "prefix": "ism",
    "body": [
      "internal static ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal static method declaration"
  },
  "private static method": {
    "prefix": "psm",
    "body": [
      "private static ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private static method declaration"
  },
  "public virtual method": {
    "prefix": "vm",
    "body": [
      "public virtual ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public virtual method declaration"
  },
  "internal virtual method": {
    "prefix": "ivm",
    "body": [
      "internal virtual ${1:void} ${2:MethodName}()",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal virtual method declaration"
  },
  "public method (with parameters)": {
    "prefix": "m_",
    "body": [
      "public ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public method declaration (with parameters)"
  },
  "internal method (with parameters)": {
    "prefix": "im_",
    "body": [
      "internal ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal method declaration (with parameters)"
  },
  "private method (with parameters)": {
    "prefix": "pm_",
    "body": [
      "private ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private method declaration (with parameters)"
  },
  "public static method (with parameters)": {
    "prefix": "sm_",
    "body": [
      "public static ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public static method declaration (with parameters)"
  },
  "internal static method (with parameters)": {
    "prefix": "ism_",
    "body": [
      "internal static ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal static method declaration (with parameters)"
  },
  "private static method (with parameters)": {
    "prefix": "psm_",
    "body": [
      "private static ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private static method declaration (with parameters)"
  },
  "public virtual method (with parameters)": {
    "prefix": "vm_",
    "body": [
      "public virtual ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public virtual method declaration (with parameters)"
  },
  "internal virtual method (with parameters)": {
    "prefix": "ivm_",
    "body": [
      "internal virtual ${1:void} ${2:MethodName}(${3:object parameter})",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal virtual method declaration (with parameters)"
  },
  "new variable (with arguments)": {
    "prefix": "vn_",
    "body": [
      "var ${1:x} = new ${2:object}(${3:arguments});${0}"
    ],
    "description": "variable declaration with new object creation (with arguments)"
  },
  "new variable": {
    "prefix": "vn",
    "body": [
      "var ${1:x} = new ${2:object}();${0}"
    ],
    "description": "variable declaration with new object creation"
  },
  "parameter array ": {
    "prefix": "pa",
    "body": [
      "params ${1:T}[]${0}"
    ],
    "description": "parameter array "
  },
  "public read-only auto property": {
    "prefix": "rp",
    "body": [
      "public ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "public read-only auto-implemented property declaration"
  },
  "internal read-only auto property": {
    "prefix": "irp",
    "body": [
      "internal ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "internal read-only auto-implemented property declaration"
  },
  "private read-only auto property": {
    "prefix": "prp",
    "body": [
      "private ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "private read-only auto-implemented property declaration"
  },
  "public static read-only auto property": {
    "prefix": "srp",
    "body": [
      "public static ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "public static read-only auto-implemented property declaration"
  },
  "internal static read-only auto property": {
    "prefix": "isrp",
    "body": [
      "internal static ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "internal static read-only auto-implemented property declaration"
  },
  "private static read-only auto property": {
    "prefix": "psrp",
    "body": [
      "private static ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "private static read-only auto-implemented property declaration"
  },
  "public virtual read-only auto property": {
    "prefix": "vrp",
    "body": [
      "public virtual ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "public virtual read-only auto-implemented property declaration"
  },
  "internal virtual read-only auto property": {
    "prefix": "ivrp",
    "body": [
      "internal virtual ${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "internal virtual read-only auto-implemented property declaration"
  },
  "public read-only field": {
    "prefix": "rf",
    "body": [
      "public readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "public read-only field declaration"
  },
  "internal read-only field": {
    "prefix": "irf",
    "body": [
      "internal readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "internal read-only field declaration"
  },
  "private read-only field": {
    "prefix": "prf",
    "body": [
      "private readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "private read-only field declaration"
  },
  "public static read-only field": {
    "prefix": "srf",
    "body": [
      "public static readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "public static read-only field declaration"
  },
  "internal static read-only field": {
    "prefix": "isrf",
    "body": [
      "internal static readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "internal static read-only field declaration"
  },
  "private static read-only field": {
    "prefix": "psrf",
    "body": [
      "private static readonly ${1:T} ${2:FieldName};${0}"
    ],
    "description": "private static read-only field declaration"
  },
  "public read-only property": {
    "prefix": "rpp",
    "body": [
      "public ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "public read-only property declaration"
  },
  "internal read-only property": {
    "prefix": "irpp",
    "body": [
      "internal ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "internal read-only property declaration"
  },
  "private read-only property": {
    "prefix": "prpp",
    "body": [
      "private ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "private read-only property declaration"
  },
  "public static read-only property": {
    "prefix": "srpp",
    "body": [
      "public static ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "public static read-only property declaration"
  },
  "internal static read-only property": {
    "prefix": "isrpp",
    "body": [
      "internal static ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "internal static read-only property declaration"
  },
  "private static read-only property": {
    "prefix": "psrpp",
    "body": [
      "private static ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "private static read-only property declaration"
  },
  "public virtual read-only property": {
    "prefix": "vrpp",
    "body": [
      "public virtual ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "public virtual read-only property declaration"
  },
  "internal virtual read-only property": {
    "prefix": "ivrpp",
    "body": [
      "internal virtual ${1:T} ${2:PropertyName}",
      "{",
      "    get { return ${3:value}; }",
      "}${0}"
    ],
    "description": "internal virtual read-only property declaration"
  },
  "public struct": {
    "prefix": "st",
    "body": [
      "public struct ${1:StructName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "public struct declaration"
  },
  "internal struct": {
    "prefix": "ist",
    "body": [
      "internal struct ${1:StructName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "internal struct declaration"
  },
  "private struct": {
    "prefix": "pst",
    "body": [
      "private struct ${1:StructName}",
      "{",
      "    ${0}",
      "}"
    ],
    "description": "private struct declaration"
  },
  "type parameter": {
    "prefix": "g",
    "body": [
      "<${1:T}>${0}"
    ],
    "description": " type parameter"
  },
  "interface indexer": {
    "prefix": "_ir",
    "body": [
      "${1:T} this[${2:int index}] { get; set; }${0}"
    ],
    "description": "interface indexer declaration"
  },
  "interface method": {
    "prefix": "_m",
    "body": [
      "${1:void} ${2:MethodName}();${0}"
    ],
    "description": "interface method declaration"
  },
  "interface method (with parameters)": {
    "prefix": "_m_",
    "body": [
      "${1:void} ${2:MethodName}(${3:object parameter});${0}"
    ],
    "description": "interface method declaration (with parameters)"
  },
  "interface property": {
    "prefix": "_p",
    "body": [
      "${1:T} ${2:PropertyName} { get; set; }${0}"
    ],
    "description": "interface property declaration"
  },
  "interface read-only property": {
    "prefix": "_rp",
    "body": [
      "${1:T} ${2:PropertyName} { get; }${0}"
    ],
    "description": "interface read-only property declaration"
  }
}